import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;

public class FieldToMapConverter {
    public static Map<String, Object> convertToMap(Object obj) {
        Map<String, Object> map = new HashMap<>();

        // Get all fields of the object, including inherited fields
        Field[] fields = obj.getClass().getDeclaredFields();

        for (Field field : fields) {
            // Exclude fields whose names start with "delta"
            if (!field.getName().startsWith("delta")) {
                field.setAccessible(true); // Allow access to private fields

                try {
                    Object value = field.get(obj);
                    map.put(field.getName(), value);
                } catch (IllegalAccessException e) {
                    e.printStackTrace();
                }
            }
        }

        return map;
    }

    // Example usage
    public static void main(String[] args) {
        // Create an object
        MyClass myObj = new MyClass();
        myObj.setAlpha(1);
        myObj.setBeta("Hello");
        myObj.setDeltaField("Exclude me");
        myObj.setGamma(true);

        // Convert fields to a map
        Map<String, Object> fieldMap = convertToMap(myObj);

        // Print the map
        for (Map.Entry<String, Object> entry : fieldMap.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }

    // Example class
    public static class MyClass {
        private int alpha;
        private String beta;
        private String deltaField;
        private boolean gamma;

        public int getAlpha() {
            return alpha;
        }

        public void setAlpha(int alpha) {
            this.alpha = alpha;
        }

        public String getBeta() {
            return beta;
        }

        public void setBeta(String beta) {
            this.beta = beta;
        }

        public String getDeltaField() {
            return deltaField;
        }

        public void setDeltaField(String deltaField) {
            this.deltaField = deltaField;
        }

        public boolean isGamma() {
            return gamma;
        }

        public void setGamma(boolean gamma) {
            this.gamma = gamma;
        }
    }
}
